<style lang="less" scoped>
  @border: 1px red solid;
  .shop-list-layout {
    width: 100%;
    height: 94%;
    overflow-x: scroll;
    padding-top: 20rpx;
    .list-box {
      margin-bottom: 20rpx;
      background: white;
      display: flex;
    }
    .check-box {
      padding-left: 25rpx;
      display: flex;
      align-items: center;
    }
  }
</style>

<template>
  <view class="shop-list-layout">
    <repeat for="{{shopList}}" key="index" index="index" item="item">
      <view class="list-box">
        <view class="check-box">
          <van-checkbox checked-color="#20716a" @tap="changeCheckBox({{index}})" value="{{itemPriceList[index].state}}"></van-checkbox>
        </view>
        <commodityCard :item="item" :index="index" mode="购物车"></commodityCard>
      </view>
    </repeat>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import commodityCard from './../../../components/commodityCard'
  export default class index extends wepy.component {
    components = {
      commodityCard
    }
    props = {
      itemPriceList: Array
    }
    data = {
      shopList: []
      // itemPriceList: []
    }
    methods = {
      changeCheckBox(index) {
        this.itemPriceList[index].state = !this.itemPriceList[index].state
        this.$emit('giveToSubmitPay', this.itemPriceList)
      }
    }
    computed = {}
    events = {
      // 父组件shopCar触发事件
      reShowShopCar(globalShopCar) {
        // 判断用户的购物车和当前存储的数据是否一致
        if (globalShopCar.length > this.shopList.length) {
          // 增加新数据
          let length = globalShopCar.length - this.shopList.length
          for (let i = 0; i < length; i++) {
            this.itemPriceList.push({
              price: globalShopCar[i].price * 100,
              state: false
            })
          }
          this.shopList = globalShopCar
        }
        this.$emit('giveToSubmitPay', this.itemPriceList)
        this.$apply()
      },
      // 父组件shopCar触发事件
      changeAllSelect(allSelect) {
        let list = this.itemPriceList
        for (let i in list) {
          list[i].state = allSelect
        }
        this.itemPriceList = list
        this.$emit('giveToSubmitPay', list)
      },
      // 子组件commodityCard触发事件
      computePrice(index, number) {
        this.itemPriceList[index].price = this.$root.$parent.globalData.shopCar[index].price * number * 100
        this.$emit('giveToSubmitPay', this.itemPriceList)
      }
    }
    onLoad() {}
  }
</script>
